---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
spec:
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    retry:
      limit: 5
      backoff:
        duration: 5s
        maxDuration: 3m0s
        factor: 2
  source:
    chart: traefik
    repoURL: https://traefik.github.io/charts
    targetRevision: 24.0.0
    helm:
      releaseName: traefik
      values: |
        deployment:
          kind: DaemonSet
        api:
          dashboard: true
        logs:
          general:
            level: INFO
        providers:
          kubernetesCRD:
            # -- Load Kubernetes IngressRoute provider
            enabled: true
            allowCrossNamespace: true
            # -- Allows to reference ExternalName services in IngressRoute
            allowExternalNameServices: true
            # -- Allows to return 503 when there is no endpoints available
            allowEmptyServices: true
            # ingressClass: traefik-internal
            # labelSelector: environment=production,method=traefik
            namespaces: []
              # - "default"

          kubernetesIngress:
            # -- Load Kubernetes IngressRoute provider
            enabled: true
            # -- Allows to reference ExternalName services in Ingress
            allowExternalNameServices: true
            # -- Allows to return 503 when there is no endpoints available
            allowEmptyServices: true
            publishedService:
              enabled: true
          ingressRoute:
            dashboard:
              enabled: false
          additionalArguments:
          - "--api.insecure=true"
          # Create the service, middleware and Ingress used to expose the dashboard (can also be created in another way).
          # /!\ Yes, you need to replace "changeme" password with a better one. /!\
          extraObjects:
            - apiVersion: v1
              kind: Service
              metadata:
                name: traefik-api
              spec:
                type: ClusterIP
                selector:
                  app.kubernetes.io/name: traefik
                  app.kubernetes.io/instance: traefik-default
                ports:
                - port: 8080
                  name: traefik
                  targetPort: 9000
                  protocol: TCP

            - apiVersion: traefik.io/v1alpha1
              kind: Middleware
              metadata:
                name: traefik-dashboard-auth
              spec:
                basicAuth:
                  secret: traefik-dashboard-auth-secret

            - apiVersion: networking.k8s.io/v1
              kind: Ingress
              metadata:
                name: traefik-dashboard
                annotations:
                  traefik.ingress.kubernetes.io/router.middlewares: default-traefik-dashboard-auth@kubernetescrd
                  cert-manager.io/cluster-issuer: "letsencrypt-prod"
                  traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
                  traefik.ingress.kubernetes.io/router.tls: "true"
              spec:
                rules:
                - host: traefik.cloudnativerioja.com
                  http:
                    paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: traefik-api
                          port:
                            name: traefik
                  tls:
                    - secretName: traefik-dashboard-tls
                      hosts:
                        - traefik.cloudnativerioja.com
  destination:
    server: "https://kubernetes.default.svc"
    namespace: core-apps
